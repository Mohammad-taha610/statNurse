<?php

namespace sa\system;
use sacore\application\DateTime;
use sacore\application\DefaultRepository;

/**
 * saRevisionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class saRevisionRepository extends DefaultRepository
{
    public function getLastRevisionNumber($className, $id) {
        $qb = $this->createQueryBuilder('revision');
        $qb->select('revision.revisionNumber');
        $qb->where('revision.entityName = :name');
        $qb->setParameter(':name', $className);
        $qb->andWhere('revision.entityId = :id');
        $qb->setParameter(':id', $id);
        $qb->orderBy('revision.revisionNumber', 'desc');
        $qb->setMaxResults(1);
        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * Returns revision history for all entities
     * from a specific date given in unix epoch time
     * format
     *
     * @param integer $epochTime
     * @param null $entityName
     * @return array
     */
    public function getRevisionsSinceEpochDate($epochTime, $entityName = null) {
        $qb = $this->createQueryBuilder('revision');

        $phpDate = new DateTime("@$epochTime");

        $qb->where('revision.revisionDate > :date');
        $qb->setParameter(':date', $phpDate);

        if($entityName != null) {
            $qb->andWhere('revision.entityName = :entity');
            $qb->setParameter(':entity', $entityName);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * Returns revision history for all entities
     * from a specific date given in SA Application
     * DateTime format
     *
     * @param DateTime $date
     * @param null $entityName
     * @return array
     */
    public function getRevisionsSinceDateTime(DateTime $date, $entityName = null) {
        $qb = $this->createQueryBuilder('revision');

        $qb->where('revision.revisionDate > :date');
        $qb->setParameter(':data', $date);

        if($entityName != null) {
            $qb->andWhere('revision.entityName = :entity');
            $qb->setParameter(':entity', $entityName);
        }

        return $qb->getQuery()->getResult();
    }
}
