<?php

namespace sa\api;
use sacore\application\app;

/**
 * apiChunkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class apiChunkRepository extends \sacore\application\DefaultRepository
{

    public function checkForCompleteFile($key) {

        $files = $this->findBy(array('chunk_key' => $key), array('beginning_offset' => 'ASC'));
        $chunkTotalSize = 0;

        $fileChunk = null;

        /** @var ApiChunk $fileChunk */
        foreach($files as $fileChunk) {
            $chunkTotalSize += $fileChunk->getSize();
        }

        if ($fileChunk->getFileSize()== ($chunkTotalSize+1)) {
            return true;
        }
        else
        {
            return false;
        }
    }

    public function reassembleFile($key) {

        $files = $this->findBy(array('chunk_key' => $key), array('beginning_offset' => 'ASC'));
        $chunkTotalSize = 0;

        $fileChunk = null;

        /** @var ApiChunk $fileChunk */
        foreach($files as $fileChunk) {
            $chunkTotalSize += $fileChunk->getSize();
        }

        $chunkTotalSize++;

        $file = $fileChunk;

        if($chunkTotalSize > $file->getFileSize()) {
            foreach($files as $failedChunk) {
                app::$entityManager->remove($failedChunk);
            }
            app::$entityManager->flush();

            throw new ApiException('Total Chunk size does not match expected file size.');
        } else if($chunkTotalSize == $file->getFileSize()) {

            $request = '';

            /** @var ApiChunk $fileChunk */
            foreach($files as $fileChunk) {
                $request .= file_get_contents(\config::tempDir.'/api_chunks/'.$key.'/'.$fileChunk->getBeginningOffset().'-'.$fileChunk->getEndingOffset().'-'.$fileChunk->getFileSize());
            }

            foreach($files as $fileChunk) {
                app::$entityManager->remove($fileChunk);
                unlink(\config::tempDir.'/api_chunks/'.$key.'/'.$fileChunk->getBeginningOffset().'-'.$fileChunk->getEndingOffset().'-'.$fileChunk->getFileSize());
                rmdir(\config::tempDir.'/api_chunks/'.$key);
            }
            app::$entityManager->flush();

            return $request;
        } else {
            return null;
        }

    }

}
