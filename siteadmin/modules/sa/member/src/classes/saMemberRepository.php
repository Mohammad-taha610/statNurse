<?php

namespace sa\member;

use Doctrine\ORM\EntityRepository;

/**
 * saMemberRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class saMemberRepository extends \sacore\application\DefaultRepository
{
    public function search($fieldsToSearch, $orderBy = NULL, $perPage = NULL, $offset = NULL, $count = false, $secondary_sort = NULL, $where_andor = 'and', $search_start = true, $search_end = true) {

        $query = $this->createQueryBuilder('q');

        if ($orderBy) {
            foreach($orderBy as $f=>$d) {
                $query->addOrderBy('q.'.$f, $d);
            }
        }

        if ($secondary_sort) {
            foreach($secondary_sort as $f=>$d) {
                $query->addOrderBy('q.'.$f, $d);
            }
        }

        if ($perPage && !$count) {
            $query->setMaxResults($perPage);
        }

        if ($offset && !$count) {
            $query->setFirstResult($offset);
        }

        if (is_array($fieldsToSearch) ) {
            foreach ($fieldsToSearch as $f => $v) {
                if($f == 'phone_number') {
                    $strippedVal = preg_replace('/[^0-9]/', '', $v);

                    $query->leftJoin('q.phones', 'phones');
                    $query->andWhere('phones.phone LIKE :phone_number');
                    $query->setParameter(':phone_number', '%' . $strippedVal . '%');
                    $query->addSelect('phones');
                } else if($f == 'email') {
                    $query->leftJoin('q.emails', 'emails');
                    $query->andWhere('emails.email LIKE :email');
                    $query->setParameter(':email', '%' . $v . '%');
                    $query->addSelect('emails');
                } else if($f == 'username') {
                    $query->leftJoin('q.users', 'users');
                    $query->andWhere('users.username LIKE :username');
                    $query->setParameter(':username', '%' . $v . '%');
                    $query->addSelect('users');
                } else {
                    if($where_andor == 'or') {
                        $query->orWhere('q.' . $f . ' LIKE :' . $f);
                    }
                    else {
                        $query->andWhere('q.' . $f . ' LIKE :' . $f);
                    }
                    $query->setParameter(':' . $f, '%' . $v . '%');
                }
            }
        }


        $conditions = [
            'q.is_deleted = false',
            'q.is_deleted = 0',
            'q.is_deleted IS NULL'
        ];

        $query->andWhere($query->expr()->orX()->addMultiple($conditions));

        if($count) {
            $query->select('count(q.id)');
            return $query->getQuery()->getSingleScalarResult();
        }
        else {
            return $query->getQuery()->getResult();
        }
    }
}
